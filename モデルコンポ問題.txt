================================================== 
【Pixeon Engine テクスチャロード失敗問題の根本原因分析】
==================================================

【問題の概要】
1. TextureManager で画像ロード時に "DecodeFailed hr=0x80004002" エラーが発生
2. モデル描画時に "TextureLoadFailed" および "MaterialNoPath" エラーが発生
3. AssetManager では Raw データは正常にロードされているため、ファイル読み込み自体は成功している

【根本原因 1: COM 初期化問題】

症状:
- hr=0x80004002 (E_NOINTERFACE) が DirectXTex の WIC 経由ロード時に発生
- TextureManager::LoadInternal() で DirectX::LoadFromWICMemory() が失敗

原因:
1. EditrGUI::LoadImg() 内で局所的な COM 初期化を実行:
   - CoInitializeEx(nullptr, COINIT_MULTITHREADED)
   - 処理完了後即座に CoUninitialize() を呼び出し

2. TextureManager::LoadInternal() 実行時:
   - DirectX::LoadFromWICMemory() が WIC (Windows Imaging Component) を使用
   - WIC は COM オブジェクトのため、呼び出しスレッドで COM が初期化されている必要がある
   - EditrGUI::LoadImg() の局所初期化が既に解除されているため COM 未初期化状態
   - 結果として E_NOINTERFACE エラーが発生

技術的詳細:
- WIC ファクトリやデコーダーの生成には COM 環境が必要
- スレッドローカルな COM 初期化のため、異なる関数での利用時に問題が発生
- 一時的な初期化→即解除のパターンにより、他の WIC 利用箇所で失敗

【根本原因 2: マテリアル テクスチャタイプ対応不足】

症状:
- モデルの SubMesh 1 以降で "MaterialNoPath" エラー
- baseColorTex が空文字列のまま

原因:
1. ModelManager::ProcessMaterials() の実装制限:
   - aiTextureType_DIFFUSE のみに対応
   - 現在のコード: mat->GetTexture(aiTextureType_DIFFUSE, 0, &texPath)

2. FBX ファイルのマテリアル構造:
   - 近年の FBX では PBR (Physically Based Rendering) が主流
   - テクスチャが aiTextureType_BASE_COLOR や aiTextureType_EMISSIVE に格納される場合が多い
   - aiTextureType_DIFFUSE に必ずしも格納されるとは限らない

3. 結果:
   - SubMesh 0 以外のマテリアルでテクスチャパスが取得できない
   - material.baseColorTex = "" のまま
   - ModelRenderComponent でテクスチャバインド失敗

【影響範囲】
1. 画像ファイル形式に関係なく、すべての WIC 対応形式 (jpg, png, bmp, etc.) で発生
2. SkyBox などの単純画像も含め、TextureManager 経由のすべてのロードが失敗
3. モデルの複数マテリアル使用時に一部のテクスチャが表示されない

【修正が必要な箇所】
1. COM 初期化: Main.cpp の Init() / UnInit()
2. COM 初期化削除: EditrGUI::LoadImg()
3. マテリアル対応拡張: ModelManager::ProcessMaterials()

【修正方針】
1. グローバル COM 初期化:
   - Main::Init() 開始時: CoInitializeEx(nullptr, COINIT_MULTITHREADED)
   - Main::UnInit() 終了時: CoUninitialize()
   - EditrGUI::LoadImg() 内の COM 初期化/終了処理を削除

2. マテリアル テクスチャタイプ対応拡張:
   - 複数のテクスチャタイプを優先順で試行
   - 推奨順序: DIFFUSE → BASE_COLOR → ALBEDO → EMISSIVE
   - 最初に見つかったテクスチャパスを使用

【予想される修正効果】
1. TextureManager での画像ロード成功率 100% 達成
2. モデルの全 SubMesh でテクスチャ表示が正常化
3. "DecodeFailed hr=0x80004002" エラーの完全解消
4. "MaterialNoPath" エラーの大幅減少

【追加推奨事項】
1. FailReason ログにファイルヘッダ情報追加（デバッグ用）
2. TextureManager にフォールバック機能実装（stb_image 等）
3. マテリアル解析の詳細ログ出力機能追加

==================================================
【分析結果: 2024年9月29日】
技術者: GitHub Copilot Coding Agent
==================================================